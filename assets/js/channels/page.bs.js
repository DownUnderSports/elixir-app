// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Js_exn from "bs-platform/lib/es6/js_exn.js";
import * as Phoenix from "phoenix";
import * as SocketBs from "socket.bs";
import * as Caml_js_exceptions from "bs-platform/lib/es6/caml_js_exceptions.js";

var channel = SocketBs.default.channel("page:lobby", { });

var presence = new Phoenix.Presence(channel);

function onPresenceSync(param) {
  var result = /* record */[/* contents */""];
  var listFunc = function (id, item) {
    var count = item.metas.length;
    result[0] = "<br>" + (String(id) + (" (count: " + (String(count) + ")</br>")));
    return /* () */0;
  };
  presence.list(listFunc);
  console.log(result[0]);
  try {
    document.querySelector("#active-users").innerHTML = result;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      var match = exn[1].message;
      if (match !== undefined) {
        console.log("Error: " + (String(match) + ""));
      } else {
        console.log("An unknown error occurred");
      }
    } else {
      throw exn;
    }
  }
  return /* () */0;
}

presence.onSync(onPresenceSync);

function positiveResponse(resp) {
  console.log("Joined successfully", resp);
  return /* () */0;
}

function negativeResponse(resp) {
  console.log("Unable to join", resp);
  return /* () */0;
}

channel.join().receive("ok", positiveResponse).receive("error", negativeResponse);

var $$default = channel;

export {
  $$default ,
  $$default as default,
  
}
/* channel Not a pure module */
